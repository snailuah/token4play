/* Animation Utilities for TOKEN4PLAYâ„¢ */

/* === KEYFRAME ANIMATIONS === */

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeDown {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(40px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes zoomOut {
  from {
    opacity: 0;
    transform: scale(1.05);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes textReveal {
  from {
    opacity: 0;
    transform: translateY(20px);
    filter: blur(2px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0);
  }
}

@keyframes blurToSharp {
  from {
    filter: blur(8px);
    opacity: 0.6;
  }
  to {
    filter: blur(0);
    opacity: 1;
  }
}

@keyframes sharpToBlur {
  from {
    filter: blur(0);
    opacity: 1;
  }
  to {
    filter: blur(8px);
    opacity: 0.6;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-10deg) scale(0.95);
  }
  to {
    opacity: 1;
    transform: rotate(0) scale(1);
  }
}

/* === UTILITY ANIMATION CLASSES === */

.fade-in {
  animation: fadeIn var(--duration-normal) var(--ease-out-quad) forwards;
}

.fade-up {
  animation: fadeUp var(--duration-normal) var(--ease-out-quad) forwards;
}

.fade-down {
  animation: fadeDown var(--duration-normal) var(--ease-out-quad) forwards;
}

.slide-in-left {
  animation: slideInLeft var(--duration-slow) var(--ease-tetris) forwards;
}

.slide-in-right {
  animation: slideInRight var(--duration-slow) var(--ease-tetris) forwards;
}

.zoom-in {
  animation: zoomIn var(--duration-normal) var(--ease-out-quad) forwards;
}

.zoom-out {
  animation: zoomOut var(--duration-normal) var(--ease-out-quad) forwards;
}

.text-reveal {
  animation: textReveal var(--duration-slow) var(--ease-tetris) forwards;
}

.blur-to-sharp {
  animation: blurToSharp var(--duration-slow) var(--ease-out-quad) forwards;
}

.sharp-to-blur {
  animation: sharpToBlur var(--duration-normal) var(--ease-out-quad) forwards;
}

.float {
  animation: float 3s ease-in-out infinite;
}

.pulse {
  animation: pulse 2s ease-in-out infinite;
}

.rotate-in {
  animation: rotateIn var(--duration-slow) var(--ease-out-quad) forwards;
}

/* === DELAY VARIANTS === */

.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-400 {
  animation-delay: 400ms;
}

.delay-500 {
  animation-delay: 500ms;
}

.delay-600 {
  animation-delay: 600ms;
}

.delay-700 {
  animation-delay: 700ms;
}

.delay-800 {
  animation-delay: 800ms;
}

.delay-1000 {
  animation-delay: 1000ms;
}

/* === STAGGER ANIMATION HELPERS === */

.stagger-item {
  opacity: 0;
  transform: translateY(30px);
  transition: all var(--duration-slow) var(--ease-tetris);
}

.stagger-item.animate {
  opacity: 1;
  transform: translateY(0);
}

.stagger-item:nth-child(1) { transition-delay: 0ms; }
.stagger-item:nth-child(2) { transition-delay: 100ms; }
.stagger-item:nth-child(3) { transition-delay: 200ms; }
.stagger-item:nth-child(4) { transition-delay: 300ms; }
.stagger-item:nth-child(5) { transition-delay: 400ms; }
.stagger-item:nth-child(6) { transition-delay: 500ms; }
.stagger-item:nth-child(7) { transition-delay: 600ms; }
.stagger-item:nth-child(8) { transition-delay: 700ms; }

/* === HOVER ANIMATION ENHANCEMENTS === */

.hover-lift {
  transition: transform var(--transition-fast), box-shadow var(--transition-fast);
}

.hover-lift:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-medium);
}

.hover-scale {
  transition: transform var(--transition-fast);
}

.hover-scale:hover {
  transform: scale(1.05);
}

.hover-glow {
  transition: box-shadow var(--transition-fast);
}

.hover-glow:hover {
  box-shadow: 0 0 30px rgba(255, 122, 0, 0.3);
}

/* === SCROLL REVEAL STATES === */

.scroll-reveal {
  opacity: 0;
  transform: translateY(50px);
  transition: all var(--duration-slow) var(--ease-tetris);
}

.scroll-reveal.revealed {
  opacity: 1;
  transform: translateY(0);
}

.scroll-reveal-left {
  opacity: 0;
  transform: translateX(-50px);
  transition: all var(--duration-slow) var(--ease-tetris);
}

.scroll-reveal-left.revealed {
  opacity: 1;
  transform: translateX(0);
}

.scroll-reveal-right {
  opacity: 0;
  transform: translateX(50px);
  transition: all var(--duration-slow) var(--ease-tetris);
}

.scroll-reveal-right.revealed {
  opacity: 1;
  transform: translateX(0);
}

/* === TETRIS HALL SPECIFIC ANIMATIONS === */

.hero-blur-fade {
  position: relative;
  overflow: hidden;
}

.hero-blur-fade::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 30%;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    var(--color-background) 100%
  );
  pointer-events: none;
}

.word-scatter {
  opacity: 0;
  transform: translateY(20px) rotate(2deg);
  transition: all var(--duration-slow) var(--ease-tetris);
}

.word-scatter.visible {
  opacity: 1;
  transform: translateY(0) rotate(0);
}

.parallax-element {
  transform: translateY(0);
  transition: transform 0.1s linear;
}

/* === LOADING ANIMATIONS === */

.loading-spinner {
  width: 24px;
  height: 24px;
  border: 2px solid var(--color-grey-light);
  border-top: 2px solid var(--color-orange);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-dots {
  display: inline-flex;
  gap: 4px;
}

.loading-dots span {
  width: 6px;
  height: 6px;
  background-color: var(--color-orange);
  border-radius: 50%;
  animation: loadingDots 1.4s ease-in-out infinite both;
}

.loading-dots span:nth-child(1) { animation-delay: -0.32s; }
.loading-dots span:nth-child(2) { animation-delay: -0.16s; }

@keyframes loadingDots {
  0%, 80%, 100% {
    opacity: 0.3;
    transform: scale(0.8);
  }
  40% {
    opacity: 1;
    transform: scale(1);
  }
}

/* === PERFORMANCE OPTIMIZATIONS === */

.will-animate {
  will-change: transform, opacity;
}

.animation-paused {
  animation-play-state: paused;
}

.animation-running {
  animation-play-state: running;
}

/* === REDUCED MOTION SUPPORT === */

@media (prefers-reduced-motion: reduce) {
  .fade-in,
  .fade-up,
  .fade-down,
  .slide-in-left,
  .slide-in-right,
  .zoom-in,
  .zoom-out,
  .text-reveal,
  .blur-to-sharp,
  .sharp-to-blur,
  .rotate-in {
    animation: none;
    opacity: 1;
    transform: none;
    filter: none;
  }
  
  .float,
  .pulse {
    animation: none;
  }
  
  .scroll-reveal,
  .scroll-reveal-left,
  .scroll-reveal-right {
    opacity: 1;
    transform: none;
  }
}
